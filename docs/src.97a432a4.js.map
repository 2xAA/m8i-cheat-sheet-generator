{"version":3,"sources":["src/parser/m8i-command-list.js","src/parser/m8i-instrument-labels.js","src/parser/m8i-common-structure.js","src/parser/m8i-wavsynth-structure.js","src/parser/m8i-macrosynth-structure.js","src/parser/m8i-sample-structure.js","src/parser/m8i-midiout-structure.js","src/parser/index.js","src/screen-writer/colors.js","src/screen-writer/common-screen-layout.js","src/util/to-hex.js","src/screen-writer/common-instrument-layout.js","src/screen-writer/macrosynth-layout.js","src/screen-writer/wavsynth-layout.js","src/screen-writer/sample-layout.js","src/screen-writer/midiout-layout.js","src/screen-writer/table-layout.js","src/screen-writer/envelope-layout.js","src/screen-writer/glyphs/m8-battery.js","src/screen-writer/glyphs/index.js","src/screen-writer/m8-logo.js","src/screen-writer/index.js","src/index.js"],"names":["commands","structure","parseCommand","value","instrument","availableCommands","common","length","label","transform","byteArray","String","fromCharCode","slice","join","valueLabels","instrumentLabels","filter","byte","row","i","Number","padStart","midiValueLabel","char","instrumentStructures","m8iWavsynthStructure","m8iMacrosynthStructure","m8iSampleStructure","m8iMidioutStructure","parseLabel","parseOffset","offsetIn","offset","key","offsetParsed","parser","parsed","commonOffsets","Object","keys","m8iCommonStructure","commonOffsetsLength","instrumentType","instrumentStructure","instrumentOffsets","instrumentOffsetsLength","backgroundColor","foregroundColor","foregroundColor2","highlightColor","highlightColor2","layout","data","x","y","type","color","push","toHex","int","toString","toUpperCase","split","pop","p","logo","Path2D","m","document","createElementNS","createSVGMatrix","t","scale","addPath","glyphs","battery","layouts","macrosynthLayout","wavsynthLayout","sampleLayout","midioutLayout","columns","rows","chars","clear","Array","fill","write","dataLength","Math","min","renderCanvas","createElement","screenWidth","screenHeight","numberOfScreensX","numberOfScreensY","screenWriter","canvas","dpr","width","height","verticalHeight","horizontalWidth","screenX","screenY","context","getContext","alpha","renderContext","style","imageRendering","imageSmoothingEnabled","fillStyle","fillRect","font","fontSize","textBaseline","renderScreen","xp","yp","fillText","save","translate","restore","barWidth","max","drawImage","m8Logo","writeLayout","commonInstrumentLayout","commonScreenLayout","tableLayout","envelopeLayout","forEach","layoutData","fontPath","require","none","dropArea","getElementById","addEventListener","e","preventDefault","file","event","dataTransfer","files","reader","FileReader","onload","arrayBuffer","result","Uint8Array","console","log","readAsArrayBuffer","stealth57","FontFace","load","then","fonts","add"],"mappings":"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","file":"src.97a432a4.js","sourceRoot":"..","sourcesContent":["const commands = {}\r\n\r\ncommands.common = {\r\n  0xFF: '---',\r\n  0x00: 'ARP',\r\n  0x01: 'CHA',\r\n  0x02: 'DEL',\r\n  0x03: 'GRV',\r\n  0x04: 'HOP',\r\n  0x05: 'KIL',\r\n  0x06: 'RAN',\r\n  0x07: 'RET',\r\n  0x08: 'REP',\r\n  0x09: 'PSL',\r\n  0x0A: 'PVB',\r\n  0x0B: 'PVX',\r\n  0x0C: 'TBL',\r\n  0x0D: 'THO',\r\n  0x0E: 'TIC',\r\n  0x0F: 'TPO',\r\n  0x10: 'VMV',\r\n  0x11: 'XCM',\r\n  0x12: 'XCF',\r\n  0x13: 'XCW',\r\n  0x14: 'XCR',\r\n  0x15: 'XDT',\r\n  0x16: 'XDF',\r\n  0x17: 'XDW',\r\n  0x18: 'XDR',\r\n  0x19: 'XRS',\r\n  0x1A: 'XRD',\r\n  0x1B: 'XRM',\r\n  0x1C: 'XRF',\r\n  0x1D: 'XRW',\r\n  0x1E: 'XRZ'\r\n}\r\n\r\ncommands.WAVSYNTH = {\r\n  0x80: 'VOL',\r\n  0x81: 'PIT',\r\n  0x82: 'FIN',\r\n  0x83: 'OSC',\r\n  0x84: 'SIZ',\r\n  0x85: 'MUL',\r\n  0x86: 'WRP',\r\n  0x87: 'MIR',\r\n  0x88: 'FIL',\r\n  0x89: 'CUT',\r\n  0x8A: 'RES',\r\n  0x8B: 'AMP',\r\n  0x8C: 'LIM',\r\n  0x8D: 'PAN',\r\n  0x8E: 'DRY',\r\n  0x8F: 'SCH',\r\n  0x90: 'SDL',\r\n  0x91: 'SRV',\r\n  0x92: 'E1>',\r\n  0x93: 'EV1',\r\n  0x94: 'AT1',\r\n  0x95: 'HO1',\r\n  0x96: 'DE1',\r\n  0x97: 'ET1',\r\n  0x98: 'E2>',\r\n  0x99: 'EV2',\r\n  0x9A: 'AT2',\r\n  0x9B: 'HO2',\r\n  0x9C: 'DE2',\r\n  0x9D: 'ET2',\r\n  0x9E: 'LFO',\r\n  0x9F: 'LF>',\r\n  0xA0: 'LFT',\r\n  0xA1: 'LFQ',\r\n  0xA2: 'LFO',\r\n  0xA3: 'LFT'\r\n}\r\n\r\ncommands.MACROSYN = {\r\n  0x80: 'VOL',\r\n  0x81: 'PIT',\r\n  0x82: 'FIN',\r\n  0x83: 'OSC',\r\n  0x84: 'TBR',\r\n  0x85: 'COL',\r\n  0x86: 'DEG',\r\n  0x87: 'RED',\r\n  0x88: 'FIL',\r\n  0x89: 'CUT',\r\n  0x8A: 'RES',\r\n  0x8B: 'AMP',\r\n  0x8C: 'LIM',\r\n  0x8D: 'PAN',\r\n  0x8E: 'DRY',\r\n  0x8F: 'SCH',\r\n  0x90: 'SDL',\r\n  0x91: 'SRV',\r\n  0x92: 'E1>',\r\n  0x93: 'EV1',\r\n  0x94: 'AT1',\r\n  0x95: 'HO1',\r\n  0x96: 'DE1',\r\n  0x97: 'ET1',\r\n  0x98: 'E2>',\r\n  0x99: 'EV2',\r\n  0x9A: 'AT2',\r\n  0x9B: 'HO2',\r\n  0x9C: 'DE2',\r\n  0x9D: 'ET2',\r\n  0x9E: 'LFO',\r\n  0x9F: 'LF>',\r\n  0xA0: 'LFT',\r\n  0xA1: 'LFQ',\r\n  0xA2: 'LFO',\r\n  0xA3: 'LFT'\r\n}\r\n\r\ncommands.SAMPLE = {\r\n  0x80: 'VOL',\r\n  0x81: 'PIT',\r\n  0x82: 'FIN',\r\n  0x83: 'PLY',\r\n  0x84: 'SLI',\r\n  0x85: 'STA',\r\n  0x86: 'LOP',\r\n  0x87: 'LEN',\r\n  0x88: 'DEG',\r\n  0x89: 'FIL',\r\n  0x8A: 'CUT',\r\n  0x8B: 'RES',\r\n  0x8C: 'AMP',\r\n  0x8D: 'LIM',\r\n  0x8E: 'PAN',\r\n  0x8F: 'DRY',\r\n  0x90: 'SCH',\r\n  0x91: 'SDL',\r\n  0x92: 'SRV',\r\n  0x93: 'E1>',\r\n  0x94: 'EV1',\r\n  0x95: 'AT1',\r\n  0x96: 'HO1',\r\n  0x97: 'DE1',\r\n  0x98: 'ET1',\r\n  0x99: 'E2>',\r\n  0x9A: 'EV2',\r\n  0x9B: 'AT2',\r\n  0x9C: 'HO2',\r\n  0x9D: 'DE2',\r\n  0x9E: 'ET2',\r\n  0x9F: 'LFO',\r\n  0xA0: 'LF>',\r\n  0xA1: 'LFT',\r\n  0xA2: 'LFQ',\r\n  0xA3: 'LFO',\r\n  0xA4: 'LFT'\r\n}\r\n\r\ncommands['MIDI OUT'] = {\r\n  0x80: 'CHN',\r\n  0x81: 'BNK',\r\n  0x82: 'MPG',\r\n  0x83: 'MPB',\r\n  0x84: 'ADD',\r\n  0x85: 'CHD',\r\n  0x86: 'CCA',\r\n  0x87: 'CCA',\r\n  0x88: 'CCB',\r\n  0x89: 'CCB',\r\n  0x8A: 'CCC',\r\n  0x8B: 'CCC',\r\n  0x8C: 'CCD',\r\n  0x8D: 'CCD',\r\n  0x8E: 'CCE',\r\n  0x8F: 'CCE',\r\n  0x90: 'CCF',\r\n  0x91: 'CCF',\r\n  0x92: 'CCG',\r\n  0x93: 'CCG',\r\n  0x94: 'CCH',\r\n  0x95: 'CCH',\r\n  0x96: 'CCI',\r\n  0x97: 'CCI',\r\n  0x98: 'CCJ',\r\n  0x99: 'CCJ'\r\n}\r\n\r\nexport default commands\r\n","export default {\r\n  0: 'WAVSYNTH',\r\n  1: 'MACROSYN',\r\n  2: 'SAMPLE',\r\n  3: 'MIDI OUT',\r\n  255: 'NONE'\r\n}\r\n","import commands from './m8i-command-list'\r\nimport instrumentLabels from './m8i-instrument-labels'\r\n\r\nfunction parseCommand (value, instrument) {\r\n  const availableCommands = {...commands.common, ...commands[instrument]}\r\n\r\n  return availableCommands[value]\r\n}\r\n\r\nconst structure = {\r\n  0x000: {\r\n    length: 14,\r\n    label: 'M8 Version Header',\r\n    transform (byteArray) {\r\n      return `${String.fromCharCode(...byteArray.slice(0, byteArray.length - 4))}${byteArray.slice(byteArray.length - 4).join('')}`\r\n    }\r\n  },\r\n\r\n  0x00E: {\r\n    length: 1,\r\n    label: 'Instrument Type',\r\n    valueLabels: instrumentLabels\r\n  },\r\n\r\n  0x00F: {\r\n    length: 12,\r\n    label: 'Instrument Name',\r\n    transform (byteArray) {\r\n      return String.fromCharCode(...byteArray.filter(byte => byte > 0))\r\n    }\r\n  },\r\n\r\n  0x01B: {\r\n    length: 1,\r\n    label: 'Transpose',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'ON'\r\n    }\r\n  },\r\n\r\n  0x01C: {\r\n    length: 1,\r\n    label: 'Table Tick'\r\n  }\r\n}\r\n\r\nlet row = 1\r\n\r\nfor (let i = 0xDD; i < 0xDD + 0x7F; i += 8) {\r\n  structure[i + 0x00] = {\r\n    length: 1,\r\n    label: `Table Row ${row} Note Transpose`\r\n  }\r\n\r\n  structure[i + 0x001] = {\r\n    length: 1,\r\n    label: `Table Row ${row} Note Volume`\r\n  }\r\n\r\n  structure[i + 0x002] = {\r\n    length: 1,\r\n    label: `Table Row ${row} CMD1`,\r\n    valueLabels (value, byteArray) {\r\n      return parseCommand(value, instrumentLabels[byteArray[0x00E]])\r\n    }\r\n  }\r\n\r\n  structure[i + 0x003] = {\r\n    length: 1,\r\n    label: `Table Row ${row} CMD1 Value`\r\n  }\r\n\r\n  structure[i + 0x004] = {\r\n    length: 1,\r\n    label: `Table Row ${row} CMD2`,\r\n    valueLabels (value, byteArray) {\r\n      return parseCommand(value, instrumentLabels[byteArray[0x00E]])\r\n    }\r\n  }\r\n\r\n  structure[i + 0x005] = {\r\n    length: 1,\r\n    label: `Table Row ${row} CMD2 Value`\r\n  }\r\n\r\n  structure[i + 0x006] = {\r\n    length: 1,\r\n    label: `Table Row ${row} CMD3`,\r\n    valueLabels (value, byteArray) {\r\n      return parseCommand(value, instrumentLabels[byteArray[0x00E]])\r\n    }\r\n  }\r\n\r\n  structure[i + 0x007] = {\r\n    length: 1,\r\n    label: `Table Row ${row} CMD3 Value`\r\n  }\r\n\r\n  row += 1\r\n}\r\n\r\nexport default structure\r\n","export default {\r\n  0x020: {\r\n    length: 1,\r\n    label: 'Shape',\r\n    valueLabels (value) {\r\n      let label\r\n\r\n      switch (value) {\r\n        case 0:\r\n          label = 'PULSE 12%'\r\n          break\r\n\r\n        case 1:\r\n          label = 'PULSE 25%'\r\n          break\r\n\r\n        case 2:\r\n          label = 'PULSE 50%'\r\n          break\r\n\r\n        case 3:\r\n          label = 'PULSE 75%'\r\n          break\r\n\r\n        case 4:\r\n          label = 'SAW'\r\n          break\r\n\r\n        case 5:\r\n          label = 'TRIANGLE'\r\n          break\r\n\r\n        case 6:\r\n          label = 'SINE'\r\n          break\r\n\r\n        case 7:\r\n          label = 'NOISE'\r\n          break\r\n\r\n        case 8:\r\n          label = 'NOISE PITCHED'\r\n          break\r\n\r\n        case 9:\r\n        default:\r\n          label = 'OVERFLOW'\r\n          break\r\n      }\r\n\r\n      return label\r\n    }\r\n  },\r\n\r\n  0x021: {\r\n    length: 1,\r\n    label: 'Size'\r\n  },\r\n\r\n  0x022: {\r\n    length: 1,\r\n    label: 'Multiply'\r\n  },\r\n\r\n  0x023: {\r\n    length: 1,\r\n    label: 'Warp'\r\n  },\r\n\r\n  0x024: {\r\n    length: 1,\r\n    label: 'Mirror'\r\n  },\r\n\r\n  0x025: {\r\n    length: 1,\r\n    label: 'Filter',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'LOWPASS',\r\n      2: 'HIGHPAS',\r\n      3: 'BANDPAS',\r\n      4: 'BANDSTO',\r\n      5: 'LP: POST',\r\n      6: 'HP: POST',\r\n      7: 'BP: POST',\r\n      8: 'BS: POST'\r\n    }\r\n  },\r\n\r\n  0x026: {\r\n    length: 1,\r\n    label: 'Cutoff'\r\n  },\r\n\r\n  0x027: {\r\n    length: 1,\r\n    label: 'Resonance'\r\n  },\r\n\r\n  0x028: {\r\n    length: 1,\r\n    label: 'Amp'\r\n  },\r\n\r\n  0x029: {\r\n    length: 1,\r\n    label: 'Limit Mode',\r\n    valueLabels: {\r\n      0: 'CLIP',\r\n      1: 'SIN',\r\n      2: 'FOLD',\r\n      3: 'WRAP',\r\n      4: 'POST'\r\n    }\r\n  },\r\n\r\n  0x02A: {\r\n    length: 1,\r\n    label: 'Pan'\r\n  },\r\n\r\n  0x02B: {\r\n    length: 1,\r\n    label: 'Dry Volume'\r\n  },\r\n\r\n  0x02C: {\r\n    length: 1,\r\n    label: 'Chorus Send'\r\n  },\r\n\r\n  0x02D: {\r\n    length: 1,\r\n    label: 'Delay Send'\r\n  },\r\n\r\n  0x02E: {\r\n    length: 1,\r\n    label: 'Reverb Send'\r\n  },\r\n\r\n  0x02F: {\r\n    length: 1,\r\n    label: 'Envelope 1 Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'SIZE',\r\n      4: 'MULT',\r\n      5: 'WARP',\r\n      6: 'MIRROR',\r\n      7: 'CUTOFF',\r\n      8: 'RES',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x030: {\r\n    length: 1,\r\n    label: 'Envelope 1 Amount'\r\n  },\r\n\r\n  0x031: {\r\n    length: 1,\r\n    label: 'Envelope 1 Attack'\r\n  },\r\n\r\n  0x032: {\r\n    length: 1,\r\n    label: 'Envelope 1 Hold'\r\n  },\r\n\r\n  0x033: {\r\n    length: 1,\r\n    label: 'Envelope 1 Decay'\r\n  },\r\n\r\n  0x034: {\r\n    length: 1,\r\n    label: 'Envelope 2 Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'SIZE',\r\n      4: 'MULT',\r\n      5: 'WARP',\r\n      6: 'MIRROR',\r\n      7: 'CUTOFF',\r\n      8: 'RES',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x035: {\r\n    length: 1,\r\n    label: 'Envelope 2 Amount'\r\n  },\r\n\r\n  0x036: {\r\n    length: 1,\r\n    label: 'Envelope 2 Attack'\r\n  },\r\n\r\n  0x037: {\r\n    length: 1,\r\n    label: 'Envelope 2 Hold'\r\n  },\r\n\r\n  0x038: {\r\n    length: 1,\r\n    label: 'Envelope 2 Decay'\r\n  },\r\n\r\n  0x03B: {\r\n    length: 1,\r\n    label: 'LFO Shape',\r\n    valueLabels: {\r\n      0: 'TRI',\r\n      1: 'SIN',\r\n      2: 'RAMP DN',\r\n      3: 'RAMP UP',\r\n      4: 'EXP DN',\r\n      5: 'EXP UP',\r\n      6: 'SQU DN',\r\n      7: 'SQU UP',\r\n      8: 'RANDOM',\r\n      9: 'DRUNK'\r\n    }\r\n  },\r\n\r\n  0x03C: {\r\n    length: 1,\r\n    label: 'LFO Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'SIZE',\r\n      4: 'MULT',\r\n      5: 'WARP',\r\n      6: 'MIRROR',\r\n      7: 'CUTOFF',\r\n      8: 'RES',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x03D: {\r\n    length: 1,\r\n    label: 'LFO Trigger Mode',\r\n    valueLabels: {\r\n      0: 'FREE',\r\n      1: 'RETRIG',\r\n      2: 'HOLD',\r\n      3: 'ONCE'\r\n    }\r\n  },\r\n\r\n  0x03E: {\r\n    length: 1,\r\n    label: 'LFO Frequency'\r\n  },\r\n\r\n  0x03F: {\r\n    length: 1,\r\n    label: 'LFO Amount'\r\n  }\r\n}\r\n","export default {\r\n  0x020: {\r\n    length: 1,\r\n    label: 'Shape',\r\n    valueLabels: {\r\n      [Number(0x00)]: 'CSAW',\r\n      [Number(0x01)]: 'MORPH',\r\n      [Number(0x02)]: 'SAW SQUARE',\r\n      [Number(0x03)]: 'SINE TRIANGLE',\r\n      [Number(0x04)]: 'BUZZ',\r\n      [Number(0x05)]: 'SQUARE SUB',\r\n      [Number(0x06)]: 'SAW SUB',\r\n      [Number(0x07)]: 'SQUARE SYNC',\r\n      [Number(0x08)]: 'SAW SYNC',\r\n      [Number(0x09)]: 'TRIPLE SAW',\r\n      [Number(0x0A)]: 'TRIPLE SQUARE',\r\n      [Number(0x0B)]: 'TRIPLE TRIANGLE',\r\n      [Number(0x0C)]: 'TRIPLE SIN',\r\n      [Number(0x0D)]: 'TRIPLE RNG',\r\n      [Number(0x0E)]: 'SAW SWARM',\r\n      [Number(0x0F)]: 'SAW COMB',\r\n      [Number(0x10)]: 'TOY',\r\n      [Number(0x11)]: 'DIGITAL FILTER LP',\r\n      [Number(0x12)]: 'DIGITAL FILTER PK',\r\n      [Number(0x13)]: 'DIGITAL FILTER BP',\r\n      [Number(0x14)]: 'DIGITAL FILTER HP',\r\n      [Number(0x15)]: 'VOSIM',\r\n      [Number(0x16)]: 'VOWEL',\r\n      [Number(0x17)]: 'VOWEL FOF',\r\n      [Number(0x18)]: 'HARMONICS',\r\n      [Number(0x19)]: 'FM',\r\n      [Number(0x1A)]: 'FEEDBACK FM',\r\n      [Number(0x1B)]: 'CHAOTIC FEEDBACK FM',\r\n      [Number(0x1C)]: 'PLUCKED',\r\n      [Number(0x1D)]: 'BOWED',\r\n      [Number(0x1E)]: 'BLOWN',\r\n      [Number(0x1F)]: 'STRUCK BELL',\r\n      [Number(0x20)]: 'STRUCK DRUM',\r\n      [Number(0x21)]: 'KICK',\r\n      [Number(0x22)]: 'CYMBAL',\r\n      [Number(0x23)]: 'SNARE',\r\n      [Number(0x24)]: 'WAVETABLES',\r\n      [Number(0x25)]: 'WAVE MAP',\r\n      [Number(0x26)]: 'WAV LINE',\r\n      [Number(0x27)]: 'WAV PARAPHONIC',\r\n      [Number(0x28)]: 'FILTERED NOISE',\r\n      [Number(0x29)]: 'TWIN PEAKS NOISE',\r\n      [Number(0x2A)]: 'CLOCKED NOISE',\r\n      [Number(0x2B)]: 'GRANULAR CLOUD',\r\n      [Number(0x2C)]: 'PARTICLE NOISE'\r\n    }\r\n  },\r\n\r\n  0x021: {\r\n    length: 1,\r\n    label: 'Timbre'\r\n  },\r\n\r\n  0x022: {\r\n    length: 1,\r\n    label: 'Color'\r\n  },\r\n\r\n  0x023: {\r\n    length: 1,\r\n    label: 'Degrade'\r\n  },\r\n\r\n  0x024: {\r\n    length: 1,\r\n    label: 'Redux'\r\n  },\r\n\r\n  0x025: {\r\n    length: 1,\r\n    label: 'Filter',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'LOWPASS',\r\n      2: 'HIGHPAS',\r\n      3: 'BANDPAS',\r\n      4: 'BANDSTO',\r\n      5: 'LP: POST',\r\n      6: 'HP: POST',\r\n      7: 'BP: POST',\r\n      8: 'BS: POST'\r\n    }\r\n  },\r\n\r\n  0x026: {\r\n    length: 1,\r\n    label: 'Cutoff'\r\n  },\r\n\r\n  0x027: {\r\n    length: 1,\r\n    label: 'Resonance'\r\n  },\r\n\r\n  0x028: {\r\n    length: 1,\r\n    label: 'Amp'\r\n  },\r\n\r\n  0x029: {\r\n    length: 1,\r\n    label: 'Limit Mode',\r\n    valueLabels: {\r\n      0: 'CLIP',\r\n      1: 'SIN',\r\n      2: 'FOLD',\r\n      3: 'WRAP',\r\n      4: 'POST'\r\n    }\r\n  },\r\n\r\n  0x02A: {\r\n    length: 1,\r\n    label: 'Pan'\r\n  },\r\n\r\n  0x02B: {\r\n    length: 1,\r\n    label: 'Dry Volume'\r\n  },\r\n\r\n  0x02C: {\r\n    length: 1,\r\n    label: 'Chorus Send'\r\n  },\r\n\r\n  0x02D: {\r\n    length: 1,\r\n    label: 'Delay Send'\r\n  },\r\n\r\n  0x02E: {\r\n    length: 1,\r\n    label: 'Reverb Send'\r\n  },\r\n\r\n  0x02F: {\r\n    length: 1,\r\n    label: 'Envelope 1 Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'TIMBRE',\r\n      4: 'COLOR',\r\n      5: 'DEGRADE',\r\n      6: 'REDUX',\r\n      7: 'CUTOFF',\r\n      8: 'RES',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x030: {\r\n    length: 1,\r\n    label: 'Envelope 1 Amount'\r\n  },\r\n\r\n  0x031: {\r\n    length: 1,\r\n    label: 'Envelope 1 Attack'\r\n  },\r\n\r\n  0x032: {\r\n    length: 1,\r\n    label: 'Envelope 1 Hold'\r\n  },\r\n\r\n  0x033: {\r\n    length: 1,\r\n    label: 'Envelope 1 Decay'\r\n  },\r\n\r\n  0x034: {\r\n    length: 1,\r\n    label: 'Envelope 2 Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'TIMBRE',\r\n      4: 'COLOR',\r\n      5: 'DEGRADE',\r\n      6: 'REDUX',\r\n      7: 'CUTOFF',\r\n      8: 'RES',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x035: {\r\n    length: 1,\r\n    label: 'Envelope 2 Amount'\r\n  },\r\n\r\n  0x036: {\r\n    length: 1,\r\n    label: 'Envelope 2 Attack'\r\n  },\r\n\r\n  0x037: {\r\n    length: 1,\r\n    label: 'Envelope 2 Hold'\r\n  },\r\n\r\n  0x038: {\r\n    length: 1,\r\n    label: 'Envelope 2 Decay'\r\n  },\r\n\r\n  0x03B: {\r\n    length: 1,\r\n    label: 'LFO Shape',\r\n    valueLabels: {\r\n      0: 'TRI',\r\n      1: 'SIN',\r\n      2: 'RAMP DN',\r\n      3: 'RAMP UP',\r\n      4: 'EXP DN',\r\n      5: 'EXP UP',\r\n      6: 'SQU DN',\r\n      7: 'SQU UP',\r\n      8: 'RANDOM',\r\n      9: 'DRUNK'\r\n    }\r\n  },\r\n\r\n  0x03C: {\r\n    length: 1,\r\n    label: 'LFO Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'TIMBRE',\r\n      4: 'COLOR',\r\n      5: 'DEGRADE',\r\n      6: 'REDUX',\r\n      7: 'CUTOFF',\r\n      8: 'RES',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x03D: {\r\n    length: 1,\r\n    label: 'LFO Trigger Mode',\r\n    valueLabels: {\r\n      0: 'FREE',\r\n      1: 'RETRIG',\r\n      2: 'HOLD',\r\n      3: 'ONCE'\r\n    }\r\n  },\r\n\r\n  0x03E: {\r\n    length: 1,\r\n    label: 'LFO Frequency'\r\n  },\r\n\r\n  0x03F: {\r\n    length: 1,\r\n    label: 'LFO Amount'\r\n  }\r\n}\r\n","export default {\r\n  0x019: {\r\n    length: 1,\r\n    label: 'Detune'\r\n  },\r\n\r\n  0x020: {\r\n    length: 1,\r\n    label: 'Play Mode',\r\n    valueLabels: {\r\n      0: 'FWD',\r\n      1: 'REV',\r\n      2: 'FWDLOOP',\r\n      3: 'REVLOOP',\r\n      4: 'FWD PP',\r\n      5: 'REV PP',\r\n      6: 'OSC',\r\n      7: 'OSC REV',\r\n      8: 'OSC PP'\r\n    }\r\n  },\r\n\r\n  0x021: {\r\n    length: 1,\r\n    label: 'Slices',\r\n    valueLabels (value) {\r\n      if (value === 0) {\r\n        return 'OFF'\r\n      }\r\n\r\n      return `${value}`.padStart(3, '0')\r\n    }\r\n  },\r\n\r\n  0x022: {\r\n    length: 1,\r\n    label: 'Start'\r\n  },\r\n\r\n  0x023: {\r\n    length: 1,\r\n    label: 'Loop Start'\r\n  },\r\n\r\n  0x024: {\r\n    length: 1,\r\n    label: 'Length'\r\n  },\r\n\r\n  0x025: {\r\n    length: 1,\r\n    label: 'Degrade'\r\n  },\r\n\r\n  0x026: {\r\n    length: 1,\r\n    label: 'Filter',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'LOWPASS',\r\n      2: 'HIGHPAS',\r\n      3: 'BANDPAS',\r\n      4: 'BANDSTO',\r\n      5: 'LP: POST',\r\n      6: 'HP: POST',\r\n      7: 'BP: POST',\r\n      8: 'BS: POST'\r\n    }\r\n  },\r\n\r\n  0x027: {\r\n    length: 1,\r\n    label: 'Cutoff'\r\n  },\r\n\r\n  0x028: {\r\n    length: 1,\r\n    label: 'Resonance'\r\n  },\r\n\r\n  0x029: {\r\n    length: 1,\r\n    label: 'Amp'\r\n  },\r\n\r\n  0x02A: {\r\n    length: 1,\r\n    label: 'Limit Mode',\r\n    valueLabels: {\r\n      0: 'CLIP',\r\n      1: 'SIN',\r\n      2: 'FOLD',\r\n      3: 'WRAP',\r\n      4: 'POST'\r\n    }\r\n  },\r\n\r\n  0x02B: {\r\n    length: 1,\r\n    label: 'Pan'\r\n  },\r\n\r\n  0x02C: {\r\n    length: 1,\r\n    label: 'Dry Volume'\r\n  },\r\n\r\n  0x02D: {\r\n    length: 1,\r\n    label: 'Chorus Send'\r\n  },\r\n\r\n  0x02E: {\r\n    length: 1,\r\n    label: 'Delay Send'\r\n  },\r\n\r\n  0x02F: {\r\n    length: 1,\r\n    label: 'Reverb Send'\r\n  },\r\n\r\n  0x030: {\r\n    length: 1,\r\n    label: 'Envelope 1 Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'LOOP ST',\r\n      4: 'LENGTH',\r\n      5: 'DEGRADE',\r\n      6: 'CUTOFF',\r\n      7: 'RES',\r\n      8: 'AMP',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x031: {\r\n    length: 1,\r\n    label: 'Envelope 1 Amount'\r\n  },\r\n\r\n  0x032: {\r\n    length: 1,\r\n    label: 'Envelope 1 Attack'\r\n  },\r\n\r\n  0x033: {\r\n    length: 1,\r\n    label: 'Envelope 1 Hold'\r\n  },\r\n\r\n  0x034: {\r\n    length: 1,\r\n    label: 'Envelope 1 Decay'\r\n  },\r\n\r\n  0x036: {\r\n    length: 1,\r\n    label: 'Envelope 2 Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'LOOP ST',\r\n      4: 'LENGTH',\r\n      5: 'DEGRADE',\r\n      6: 'CUTOFF',\r\n      7: 'RES',\r\n      8: 'AMP',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x037: {\r\n    length: 1,\r\n    label: 'Envelope 2 Amount'\r\n  },\r\n\r\n  0x038: {\r\n    length: 1,\r\n    label: 'Envelope 2 Attack'\r\n  },\r\n\r\n  0x039: {\r\n    length: 1,\r\n    label: 'Envelope 2 Hold'\r\n  },\r\n\r\n  0x03A: {\r\n    length: 1,\r\n    label: 'Envelope 2 Decay'\r\n  },\r\n\r\n  0x03C: {\r\n    length: 1,\r\n    label: 'LFO Shape',\r\n    valueLabels: {\r\n      0: 'TRI',\r\n      1: 'SIN',\r\n      2: 'RAMP DN',\r\n      3: 'RAMP UP',\r\n      4: 'EXP DN',\r\n      5: 'EXP UP',\r\n      6: 'SQU DN',\r\n      7: 'SQU UP',\r\n      8: 'RANDOM',\r\n      9: 'DRUNK'\r\n    }\r\n  },\r\n\r\n  0x03D: {\r\n    length: 1,\r\n    label: 'LFO Destination',\r\n    valueLabels: {\r\n      0: 'OFF',\r\n      1: 'VOLUME',\r\n      2: 'PITCH',\r\n      3: 'LOOP ST',\r\n      4: 'LENGTH',\r\n      5: 'DEGRADE',\r\n      6: 'CUTOFF',\r\n      7: 'RES',\r\n      8: 'AMP',\r\n      9: 'AMP'\r\n    }\r\n  },\r\n\r\n  0x03E: {\r\n    length: 1,\r\n    label: 'LFO Trigger Mode',\r\n    valueLabels: {\r\n      0: 'FREE',\r\n      1: 'RETRIG',\r\n      2: 'HOLD',\r\n      3: 'ONCE'\r\n    }\r\n  },\r\n\r\n  0x03F: {\r\n    length: 1,\r\n    label: 'LFO Frequency'\r\n  },\r\n\r\n  0x040: {\r\n    length: 1,\r\n    label: 'LFO Amount'\r\n  },\r\n\r\n  0x05D: {\r\n    length: 127,\r\n    label: 'Sample file-path',\r\n    transform (byteArray) {\r\n      return String.fromCharCode(...byteArray.filter((i) => i > 0))\r\n    }\r\n  }\r\n}\r\n","function midiValueLabel (value) {\r\n  if (value === 0 || value > 128) {\r\n    return '---'\r\n  }\r\n\r\n  return `${value - 1}`.padStart(3, '0')\r\n}\r\n\r\nconst structure = {\r\n  0x020: {\r\n    length: 1,\r\n    label: 'MIDI Channel',\r\n    valueLabels (value) {\r\n      return `${value + 1}`.padStart(3, '0')\r\n    }\r\n  },\r\n\r\n  0x021: {\r\n    length: 1,\r\n    label: 'MIDI Program Bank',\r\n    valueLabels: midiValueLabel\r\n  },\r\n\r\n  0x022: {\r\n    length: 1,\r\n    label: 'MIDI Program Change',\r\n    valueLabels: midiValueLabel\r\n  }\r\n}\r\n\r\nfor (let i = 0; i < 10; i += 1) {\r\n  const char = String.fromCharCode(65 + i)\r\n\r\n  structure[0x026 + (i * 2)] = {\r\n    length: 1,\r\n    label: `MIDI CC ${char} Control`,\r\n    valueLabels: midiValueLabel\r\n  }\r\n\r\n  structure[0x027 + (i * 2)] = {\r\n    length: 1,\r\n    label: `MIDI CC ${char} Value`,\r\n    valueLabels: midiValueLabel\r\n  }\r\n}\r\n\r\nexport default structure\r\n","import m8iCommonStructure from './m8i-common-structure'\r\nimport m8iWavsynthStructure from './m8i-wavsynth-structure'\r\nimport m8iMacrosynthStructure from './m8i-macrosynth-structure'\r\nimport m8iSampleStructure from './m8i-sample-structure'\r\nimport m8iMidioutStructure from './m8i-midiout-structure'\r\n\r\nconst instrumentStructures = {\r\n  'WAVSYNTH': m8iWavsynthStructure,\r\n  'MACROSYN': m8iMacrosynthStructure,\r\n  'SAMPLE': m8iSampleStructure,\r\n  'MIDI OUT': m8iMidioutStructure\r\n}\r\n\r\nfunction parseLabel (value, valueLabels, byteArray) {\r\n  let label = null\r\n\r\n  if (valueLabels && typeof valueLabels === 'function') {\r\n    label = valueLabels(value, byteArray)\r\n  } else if (valueLabels) {\r\n    label = valueLabels[value]\r\n  }\r\n\r\n  return label\r\n}\r\n\r\nfunction parseOffset (byteArray = [], offsetIn, structure) {\r\n  const offset = Number(offsetIn)\r\n  const key = structure.label\r\n  const offsetParsed = { [key]: { value: null, label: null } }\r\n\r\n  if (structure.length === 1) {\r\n    const value = byteArray[offset]\r\n    const label = parseLabel(value, structure.valueLabels, byteArray)\r\n\r\n    offsetParsed[key].value = value\r\n    offsetParsed[key].label = label\r\n  } else if (structure.length > 1 && structure.transform) {\r\n    offsetParsed[key].value = structure.transform(\r\n      byteArray.slice(offset, offset + structure.length)\r\n    )\r\n  }\r\n\r\n  return offsetParsed\r\n}\r\n\r\nexport default function parser (byteArray) {\r\n  let parsed = {}\r\n\r\n  const commonOffsets = Object.keys(m8iCommonStructure)\r\n  const commonOffsetsLength = commonOffsets.length\r\n\r\n  for (let i = 0; i < commonOffsetsLength; i += 1) {\r\n    const offset = Number(commonOffsets[i])\r\n    const structure = m8iCommonStructure[offset]\r\n\r\n    parsed = {...parsed, ...parseOffset(byteArray, offset, structure)}\r\n  }\r\n\r\n  const instrumentType = parsed['Instrument Type'].label\r\n\r\n  if (instrumentType === 'NONE') {\r\n    return parsed\r\n  }\r\n\r\n  const instrumentStructure = instrumentStructures[instrumentType]\r\n\r\n  const instrumentOffsets = Object.keys(instrumentStructure)\r\n  const instrumentOffsetsLength = instrumentOffsets.length\r\n\r\n  for (let i = 0; i < instrumentOffsetsLength; i += 1) {\r\n    const offset = instrumentOffsets[i]\r\n    const structure = instrumentStructure[offset]\r\n\r\n    parsed = {...parsed, ...parseOffset(byteArray, offset, structure)}\r\n  }\r\n\r\n  return parsed\r\n}\r\n","const backgroundColor = '#000000'\r\nconst foregroundColor = '#ffffff'\r\nconst foregroundColor2 = '#b5b5b5'\r\nconst highlightColor = '#01faff'\r\nconst highlightColor2 = '#ff00b0'\r\n\r\nexport {\r\n  backgroundColor,\r\n  foregroundColor,\r\n  foregroundColor2,\r\n  highlightColor,\r\n  highlightColor2\r\n}\r\n","import { foregroundColor2, highlightColor } from './colors'\r\n\r\nconst layout = [\r\n  { data: 'battery', x: 34, y: 4, type: 'glyph', color: foregroundColor2 },\r\n  { data: 'T>120', x: 34, y: 5, color: foregroundColor2 }\r\n]\r\n\r\nfor (let i = 0; i < 8; i += 1) {\r\n  layout.push({\r\n    data: i + 1,\r\n    x: 34,\r\n    y: 7 + i,\r\n    color: i > 0 ? foregroundColor2 : highlightColor\r\n  })\r\n\r\n  layout.push({\r\n    data: '---',\r\n    x: 36,\r\n    y: 7 + i,\r\n    color: foregroundColor2\r\n  })\r\n}\r\n\r\nexport default layout\r\n","export default function toHex (int) {\r\n  return Number(int).toString(16).padStart(2, '0').toUpperCase()\r\n}\r\n","import toHex from '../util/to-hex'\r\nimport {\r\n  foregroundColor,\r\n  foregroundColor2,\r\n  highlightColor\r\n} from './colors'\r\n\r\nexport default [\r\n  { data: 'INST. 00', x: 1, y: 3, color: highlightColor },\r\n\r\n  { data: 'LOAD SAVE', x: 19, y: 3, color: foregroundColor },\r\n\r\n  { data: 'TYPE', x: 1, y: 5, color: foregroundColor2 },\r\n  { data: (data) => data['Instrument Type'].label, x: 9, y: 5, color: foregroundColor },\r\n\r\n  { data: 'NAME', x: 1, y: 6, color: foregroundColor2 },\r\n  { data: '------------', x: 9, y: 6, color: foregroundColor2 },\r\n  { data: (data) => data['Instrument Name'].value, x: 9, y: 6, color: foregroundColor },\r\n\r\n  { data: 'TRANSP.', x: 1, y: 7, color: foregroundColor2 },\r\n  { data: (data) => data['Transpose'].label, x: 9, y: 7, color: foregroundColor },\r\n\r\n  { data: 'TABLE TIC', x: 16, y: 7, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Table Tick'].value), x: 26, y: 7, color: foregroundColor }\r\n]\r\n","import toHex from '../util/to-hex'\r\nimport { highlightColor, foregroundColor, foregroundColor2 } from './colors'\r\n\r\nexport default [\r\n  { data: 'SHAPE', x: 1, y: 9, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Shape'].value), x: 9, y: 9, color: foregroundColor },\r\n  { data: (data) => data['Shape'].label, x: 11, y: 9, color: highlightColor },\r\n\r\n  { data: 'TIMBRE', x: 1, y: 11, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Timbre'].value), x: 9, y: 11, color: foregroundColor },\r\n  { data: (data) => data['Timbre'].value, x: 11, y: 11, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'COLOR', x: 1, y: 12, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Color'].value), x: 9, y: 12, color: foregroundColor },\r\n  { data: (data) => data['Color'].value, x: 11, y: 12, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'DEGRADE', x: 1, y: 13, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Degrade'].value), x: 9, y: 13, color: foregroundColor },\r\n  { data: (data) => data['Degrade'].value, x: 11, y: 13, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'REDUX', x: 1, y: 14, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Redux'].value), x: 9, y: 14, color: foregroundColor },\r\n  { data: (data) => data['Redux'].value, x: 11, y: 14, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'FILTER', x: 1, y: 15, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Filter'].value), x: 9, y: 15, color: foregroundColor },\r\n  { data: (data) => data['Filter'].label, x: 11, y: 15, color: highlightColor },\r\n\r\n  { data: 'CUTOFF', x: 1, y: 16, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Cutoff'].value), x: 9, y: 16, color: foregroundColor },\r\n  { data: (data) => data['Cutoff'].value, x: 11, y: 16, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'RES', x: 1, y: 17, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Resonance'].value), x: 9, y: 17, color: foregroundColor },\r\n  { data: (data) => data['Resonance'].value, x: 11, y: 17, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'AMP', x: 19, y: 11, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Amp'].value), x: 23, y: 11, color: foregroundColor },\r\n  { data: (data) => data['Amp'].value, x: 25, y: 11, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'LIM', x: 19, y: 12, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Limit Mode'].value), x: 23, y: 12, color: foregroundColor },\r\n  { data: (data) => data['Limit Mode'].label, x: 25, y: 12, color: highlightColor },\r\n\r\n  { data: 'PAN', x: 19, y: 13, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Pan'].value), x: 23, y: 13, color: foregroundColor },\r\n  { data: (data) => data['Pan'].value, x: 25, y: 13, color: highlightColor, type: 'bar-centered' },\r\n\r\n  { data: 'DRY', x: 19, y: 14, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Dry Volume'].value), x: 23, y: 14, color: foregroundColor },\r\n  { data: (data) => data['Dry Volume'].value, x: 25, y: 14, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'CHO', x: 19, y: 15, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Chorus Send'].value), x: 23, y: 15, color: foregroundColor },\r\n  { data: (data) => data['Chorus Send'].value, x: 25, y: 15, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'DEL', x: 19, y: 16, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Delay Send'].value), x: 23, y: 16, color: foregroundColor },\r\n  { data: (data) => data['Delay Send'].value, x: 25, y: 16, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'REV', x: 19, y: 17, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Reverb Send'].value), x: 23, y: 17, color: foregroundColor },\r\n  { data: (data) => data['Reverb Send'].value, x: 25, y: 17, color: highlightColor, type: 'bar' }\r\n]\r\n","import toHex from '../util/to-hex'\r\nimport { highlightColor, foregroundColor, foregroundColor2 } from './colors'\r\n\r\nexport default [\r\n  { data: 'SHAPE', x: 1, y: 9, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Shape'].value), x: 9, y: 9, color: foregroundColor },\r\n  { data: (data) => data['Shape'].label, x: 11, y: 9, color: highlightColor },\r\n\r\n  { data: 'SIZE', x: 1, y: 11, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Size'].value), x: 9, y: 11, color: foregroundColor },\r\n  { data: (data) => data['Size'].value, x: 11, y: 11, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'MULT', x: 1, y: 12, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Multiply'].value), x: 9, y: 12, color: foregroundColor },\r\n  { data: (data) => data['Multiply'].value, x: 11, y: 12, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'WARP', x: 1, y: 13, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Warp'].value), x: 9, y: 13, color: foregroundColor },\r\n  { data: (data) => data['Warp'].value, x: 11, y: 13, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'MIRROR', x: 1, y: 14, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Mirror'].value), x: 9, y: 14, color: foregroundColor },\r\n  { data: (data) => data['Mirror'].value, x: 11, y: 14, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'FILTER', x: 1, y: 15, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Filter'].value), x: 9, y: 15, color: foregroundColor },\r\n  { data: (data) => data['Filter'].label, x: 11, y: 15, color: highlightColor },\r\n\r\n  { data: 'CUTOFF', x: 1, y: 16, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Cutoff'].value), x: 9, y: 16, color: foregroundColor },\r\n  { data: (data) => data['Cutoff'].value, x: 11, y: 16, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'RES', x: 1, y: 17, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Resonance'].value), x: 9, y: 17, color: foregroundColor },\r\n  { data: (data) => data['Resonance'].value, x: 11, y: 17, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'AMP', x: 19, y: 11, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Amp'].value), x: 23, y: 11, color: foregroundColor },\r\n  { data: (data) => data['Amp'].value, x: 25, y: 11, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'LIM', x: 19, y: 12, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Limit Mode'].value), x: 23, y: 12, color: foregroundColor },\r\n  { data: (data) => data['Limit Mode'].label, x: 25, y: 12, color: highlightColor },\r\n\r\n  { data: 'PAN', x: 19, y: 13, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Pan'].value), x: 23, y: 13, color: foregroundColor },\r\n  { data: (data) => data['Pan'].value, x: 25, y: 13, color: highlightColor, type: 'bar-centered' },\r\n\r\n  { data: 'DRY', x: 19, y: 14, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Dry Volume'].value), x: 23, y: 14, color: foregroundColor },\r\n  { data: (data) => data['Dry Volume'].value, x: 25, y: 14, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'CHO', x: 19, y: 15, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Chorus Send'].value), x: 23, y: 15, color: foregroundColor },\r\n  { data: (data) => data['Chorus Send'].value, x: 25, y: 15, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'DEL', x: 19, y: 16, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Delay Send'].value), x: 23, y: 16, color: foregroundColor },\r\n  { data: (data) => data['Delay Send'].value, x: 25, y: 16, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'REV', x: 19, y: 17, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Reverb Send'].value), x: 23, y: 17, color: foregroundColor },\r\n  { data: (data) => data['Reverb Send'].value, x: 25, y: 17, color: highlightColor, type: 'bar' }\r\n]\r\n","import toHex from '../util/to-hex'\r\nimport { highlightColor, foregroundColor, foregroundColor2 } from './colors'\r\n\r\nexport default [\r\n  { data: 'SAMPLE', x: 1, y: 9, color: foregroundColor2 },\r\n  {\r\n    data: (data) => data['Sample file-path'].value.split('/').pop().toUpperCase().slice(0, 19),\r\n    x: 9,\r\n    y: 9,\r\n    color: highlightColor\r\n  },\r\n\r\n  { data: 'SLICE', x: 1, y: 11, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Slices'].value), x: 9, y: 11, color: foregroundColor },\r\n  { data: (data) => data['Slices'].label, x: 11, y: 11, color: highlightColor },\r\n\r\n  { data: 'PLAY', x: 1, y: 12, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Play Mode'].value), x: 9, y: 12, color: foregroundColor },\r\n  { data: (data) => data['Play Mode'].label, x: 11, y: 12, color: highlightColor },\r\n\r\n  { data: 'START', x: 1, y: 13, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Start'].value), x: 9, y: 13, color: foregroundColor },\r\n  { data: (data) => data['Start'].value, x: 11, y: 13, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'LOOP ST', x: 1, y: 14, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Loop Start'].value), x: 9, y: 14, color: foregroundColor },\r\n  { data: (data) => data['Loop Start'].value, x: 11, y: 14, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'LENGTH', x: 1, y: 15, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Length'].value), x: 9, y: 15, color: foregroundColor },\r\n  { data: (data) => data['Length'].value, x: 11, y: 15, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'DETUNE', x: 1, y: 16, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Detune'].value), x: 9, y: 16, color: foregroundColor },\r\n  { data: (data) => data['Detune'].value, x: 11, y: 16, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'DEGRADE', x: 1, y: 17, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Degrade'].value), x: 9, y: 17, color: foregroundColor },\r\n  { data: (data) => data['Degrade'].value, x: 11, y: 17, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'FILTER', x: 1, y: 18, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Filter'].value), x: 9, y: 18, color: foregroundColor },\r\n  { data: (data) => data['Filter'].label, x: 11, y: 18, color: highlightColor },\r\n\r\n  { data: 'CUTOFF', x: 1, y: 19, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Cutoff'].value), x: 9, y: 19, color: foregroundColor },\r\n  { data: (data) => data['Cutoff'].value, x: 11, y: 19, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'RES', x: 1, y: 20, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Resonance'].value), x: 9, y: 20, color: foregroundColor },\r\n  { data: (data) => data['Resonance'].value, x: 11, y: 20, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'AMP', x: 19, y: 11, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Amp'].value), x: 23, y: 11, color: foregroundColor },\r\n  { data: (data) => data['Amp'].value, x: 25, y: 11, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'LIM', x: 19, y: 12, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Limit Mode'].value), x: 23, y: 12, color: foregroundColor },\r\n  { data: (data) => data['Limit Mode'].label, x: 25, y: 12, color: highlightColor },\r\n\r\n  { data: 'PAN', x: 19, y: 13, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Pan'].value), x: 23, y: 13, color: foregroundColor },\r\n  { data: (data) => data['Pan'].value, x: 25, y: 13, color: highlightColor, type: 'bar-centered' },\r\n\r\n  { data: 'DRY', x: 19, y: 14, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Dry Volume'].value), x: 23, y: 14, color: foregroundColor },\r\n  { data: (data) => data['Dry Volume'].value, x: 25, y: 14, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'CHO', x: 19, y: 15, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Chorus Send'].value), x: 23, y: 15, color: foregroundColor },\r\n  { data: (data) => data['Chorus Send'].value, x: 25, y: 15, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'DEL', x: 19, y: 16, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Delay Send'].value), x: 23, y: 16, color: foregroundColor },\r\n  { data: (data) => data['Delay Send'].value, x: 25, y: 16, color: highlightColor, type: 'bar' },\r\n\r\n  { data: 'REV', x: 19, y: 17, color: foregroundColor2 },\r\n  { data: (data) => toHex(data['Reverb Send'].value), x: 23, y: 17, color: foregroundColor },\r\n  { data: (data) => data['Reverb Send'].value, x: 25, y: 17, color: highlightColor, type: 'bar' }\r\n]\r\n","\r\nimport toHex from '../util/to-hex'\r\nimport { highlightColor, foregroundColor, foregroundColor2 } from './colors'\r\n\r\nconst layout = [\r\n  { data: 'CHANNEL', x: 1, y: 9, color: foregroundColor2 },\r\n  { data: (data) => data['MIDI Channel'].label, x: 9, y: 9, color: foregroundColor },\r\n\r\n  { data: 'BANK:PG', x: 1, y: 10, color: foregroundColor2 },\r\n  { data: (data) => data['MIDI Program Bank'].label, x: 9, y: 10, color: foregroundColor },\r\n  { data: ':', x: 12, y: 10, color: foregroundColor2 },\r\n  { data: (data) => data['MIDI Program Change'].label, x: 13, y: 10, color: foregroundColor }\r\n]\r\n\r\nfor (let i = 0; i < 10; i += 1) {\r\n  const char = String.fromCharCode(65 + i)\r\n\r\n  layout.push(\r\n    { data: `CC${char} CC:VAL`, x: 1, y: 12 + i, color: foregroundColor2 },\r\n    {\r\n      data: (data) => data[`MIDI CC ${char} Control`].label,\r\n      x: 13,\r\n      y: 12 + i,\r\n      color: foregroundColor\r\n    },\r\n    { data: ':', x: 16, y: 12 + i, color: foregroundColor2 },\r\n    {\r\n      data: (data) =>\r\n        toHex(data[`MIDI CC ${char} Value`].value > 128 ? 0 : data[`MIDI CC ${char} Value`].value),\r\n      x: 17,\r\n      y: 12 + i,\r\n      color: foregroundColor\r\n    },\r\n    {\r\n      data: (data) =>\r\n        data[`MIDI CC ${char} Value`].value > 128 ? 0 : data[`MIDI CC ${char} Value`].value,\r\n      x: 19,\r\n      y: 12 + i,\r\n      color: highlightColor,\r\n      type: 'bar'\r\n    }\r\n  )\r\n}\r\n\r\nexport default layout\r\n","import toHex from '../util/to-hex'\r\nimport { foregroundColor, foregroundColor2, highlightColor } from './colors'\r\n\r\nconst layout = [\r\n  { data: 'TABLE 00', x: 1, y: 3, color: highlightColor },\r\n\r\n  {\r\n    data: 'N  V  CMD1  CMD2  CMD3',\r\n    x: 3,\r\n    y: 5,\r\n    color: foregroundColor2\r\n  },\r\n\r\n  // map\r\n  { data: '    E', x: 34, y: 17, color: foregroundColor2 },\r\n  { data: 'SCPI', x: 34, y: 18, color: foregroundColor2 },\r\n  { data: 'T', x: 38, y: 18, color: highlightColor },\r\n  { data: '   M ', x: 35, y: 19, color: foregroundColor2 }\r\n]\r\n\r\nfor (let i = 0; i < 16; i += 1) {\r\n  layout.push({\r\n    data: toHex(i)[1],\r\n    x: 1,\r\n    y: 6 + i,\r\n    color: i % 4 === 0 ? foregroundColor : foregroundColor2\r\n  })\r\n\r\n  layout.push({ data: '--', x: 3, y: 6 + i, color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Table Row ${i + 1} Note Transpose`].value),\r\n    x: 3,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '--', x: 6, y: 6 + i, color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => {\r\n      const { value } = data[`Table Row ${i + 1} Note Volume`]\r\n      if (value < 128) {\r\n        return toHex(value)\r\n      }\r\n\r\n      return false\r\n    },\r\n    x: 6,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '---', x: 9, y: 6 + i, color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => {\r\n      const { label, value } = data[`Table Row ${i + 1} CMD1`]\r\n      if (value < 255) {\r\n        return label\r\n      }\r\n\r\n      return false\r\n    },\r\n    x: 9,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '00', x: 12, y: 6 + i, color: foregroundColor })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Table Row ${i + 1} CMD1 Value`].value),\r\n    x: 12,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '---', x: 15, y: 6 + i, color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => {\r\n      const { label, value } = data[`Table Row ${i + 1} CMD2`]\r\n      if (value < 255) {\r\n        return label\r\n      }\r\n\r\n      return false\r\n    },\r\n    x: 15,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '00', x: 18, y: 6 + i, color: foregroundColor })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Table Row ${i + 1} CMD2 Value`].value),\r\n    x: 18,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '---', x: 21, y: 6 + i, color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => {\r\n      const { label, value } = data[`Table Row ${i + 1} CMD3`]\r\n      if (value < 255) {\r\n        return label\r\n      }\r\n\r\n      return false\r\n    },\r\n    x: 21,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n\r\n  layout.push({ data: '00', x: 24, y: 6 + i, color: foregroundColor })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Table Row ${i + 1} CMD3 Value`].value),\r\n    x: 24,\r\n    y: 6 + i,\r\n    color: foregroundColor\r\n  })\r\n}\r\n\r\nexport default layout\r\n","import toHex from '../util/to-hex'\r\nimport { foregroundColor, foregroundColor2, highlightColor } from './colors'\r\n\r\nconst layout = [\r\n  // map\r\n  { data: '   E ', x: 34, y: 17, color: highlightColor },\r\n  { data: 'SCPIT', x: 34, y: 18, color: foregroundColor2 },\r\n  { data: '   M ', x: 34, y: 19, color: foregroundColor2 },\r\n\r\n  {\r\n    data: 'LFO',\r\n    x: 19,\r\n    y: 9,\r\n    color: foregroundColor2\r\n  },\r\n  {\r\n    data: (data) => toHex(data['LFO Destination'].value),\r\n    x: 23,\r\n    y: 9,\r\n    color: foregroundColor\r\n  },\r\n  {\r\n    data: (data) => data['LFO Destination'].label,\r\n    x: 25,\r\n    y: 9,\r\n    color: highlightColor\r\n  },\r\n\r\n  {\r\n    data: 'AMT',\r\n    x: 19,\r\n    y: 10,\r\n    color: foregroundColor2\r\n  },\r\n  {\r\n    data: (data) => toHex(data['LFO Amount'].value),\r\n    x: 23,\r\n    y: 10,\r\n    color: foregroundColor\r\n  },\r\n  {\r\n    data: (data) => data['LFO Amount'].value,\r\n    x: 25,\r\n    y: 10,\r\n    color: highlightColor,\r\n    type: 'bar'\r\n  },\r\n\r\n  {\r\n    data: 'OSC',\r\n    x: 19,\r\n    y: 11,\r\n    color: foregroundColor2\r\n  },\r\n  {\r\n    data: (data) => toHex(data['LFO Shape'].value),\r\n    x: 23,\r\n    y: 11,\r\n    color: foregroundColor\r\n  },\r\n  {\r\n    data: (data) => data['LFO Shape'].label,\r\n    x: 25,\r\n    y: 11,\r\n    color: highlightColor\r\n  },\r\n\r\n  {\r\n    data: 'TRG',\r\n    x: 19,\r\n    y: 12,\r\n    color: foregroundColor2\r\n  },\r\n  {\r\n    data: (data) => toHex(data['LFO Trigger Mode'].value),\r\n    x: 23,\r\n    y: 12,\r\n    color: foregroundColor\r\n  },\r\n  {\r\n    data: (data) => data['LFO Trigger Mode'].label,\r\n    x: 25,\r\n    y: 12,\r\n    color: highlightColor\r\n  },\r\n\r\n  {\r\n    data: 'FRQ',\r\n    x: 19,\r\n    y: 13,\r\n    color: foregroundColor2\r\n  },\r\n  {\r\n    data: (data) => toHex(data['LFO Frequency'].value),\r\n    x: 23,\r\n    y: 13,\r\n    color: foregroundColor\r\n  },\r\n  {\r\n    data: (data) => data['LFO Frequency'].value,\r\n    x: 25,\r\n    y: 13,\r\n    color: highlightColor,\r\n    type: 'bar'\r\n  }\r\n]\r\n\r\nfor (let i = 0; i < 2; i += 1) {\r\n  layout.push({ data: `ENV${i + 1} TO`, x: 1, y: 9 + (i * 6), color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Envelope ${i + 1} Destination`].value),\r\n    x: 9,\r\n    y: 9 + (i * 6),\r\n    color: foregroundColor\r\n  })\r\n  layout.push({\r\n    data: (data) => data[`Envelope ${i + 1} Destination`].label,\r\n    x: 11,\r\n    y: 9 + (i * 6),\r\n    color: highlightColor\r\n  })\r\n\r\n  layout.push({ data: 'AMOUNT', x: 1, y: 10 + (i * 6), color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Envelope ${i + 1} Amount`].value),\r\n    x: 9,\r\n    y: 10 + (i * 6),\r\n    color: foregroundColor\r\n  })\r\n  layout.push({\r\n    data: (data) => data[`Envelope ${i + 1} Amount`].value,\r\n    x: 11,\r\n    y: 10 + (i * 6),\r\n    color: highlightColor,\r\n    type: 'bar'\r\n  })\r\n\r\n  layout.push({ data: 'ATTACK', x: 1, y: 11 + (i * 6), color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Envelope ${i + 1} Attack`].value),\r\n    x: 9,\r\n    y: 11 + (i * 6),\r\n    color: foregroundColor\r\n  })\r\n  layout.push({\r\n    data: (data) => data[`Envelope ${i + 1} Attack`].value,\r\n    x: 11,\r\n    y: 11 + (i * 6),\r\n    color: highlightColor,\r\n    type: 'bar'\r\n  })\r\n\r\n  layout.push({ data: 'HOLD', x: 1, y: 12 + (i * 6), color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Envelope ${i + 1} Hold`].value),\r\n    x: 9,\r\n    y: 12 + (i * 6),\r\n    color: foregroundColor\r\n  })\r\n  layout.push({\r\n    data: (data) => data[`Envelope ${i + 1} Hold`].value,\r\n    x: 11,\r\n    y: 12 + (i * 6),\r\n    color: highlightColor,\r\n    type: 'bar'\r\n  })\r\n\r\n  layout.push({ data: 'DECAY', x: 1, y: 13 + (i * 6), color: foregroundColor2 })\r\n  layout.push({\r\n    data: (data) => toHex(data[`Envelope ${i + 1} Decay`].value),\r\n    x: 9,\r\n    y: 13 + (i * 6),\r\n    color: foregroundColor\r\n  })\r\n  layout.push({\r\n    data: (data) => data[`Envelope ${i + 1} Decay`].value,\r\n    x: 11,\r\n    y: 13 + (i * 6),\r\n    color: highlightColor,\r\n    type: 'bar'\r\n  })\r\n}\r\n\r\nexport default layout\r\n","const logo = new Path2D('M 4.92,1.31 0.33,1.31 0.33,0.99 0,0.99 0,0.33 0.33,0.33 0.33,0 4.92,0 4.92,0.33 2.95,0.33 2.95,0.99   4.92,0.99 4.92,0.33 5.25,0.33 5.25,0.99 4.92,0.99 z')\r\n\r\nconst m = document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGMatrix()\r\nconst p = new Path2D()\r\nconst t = m.scale(10)\r\np.addPath(logo, t)\r\n\r\nexport default p\r\n","import battery from './m8-battery'\r\n\r\nconst glyphs = {\r\n  battery\r\n}\r\n\r\nexport default glyphs\r\n","const logo = new Path2D('M 232.4 111.7 L 232.4 160.7 L 87.4 160.7 L 87.4 128.7 L 146.8 128.7 L 162 128.7 L 191.1 128.7 L 250.2 69.5 L 226.9 46.2 L 177.4 95.7 L 87.4 95.7 L 55.4 95.7 L 55.4 160.7 L 55.4 193.7 L 232.4 193.7 L 264.4 193.7 L 264.4 111.7 Z')\r\n\r\nconst m = document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGMatrix()\r\nconst p = new Path2D()\r\nconst t = m.scale(5.01)\r\np.addPath(logo, t)\r\n\r\nexport default p\r\n","import commonScreenLayout from './common-screen-layout'\r\nimport commonInstrumentLayout from './common-instrument-layout'\r\nimport macrosynthLayout from './macrosynth-layout'\r\nimport wavsynthLayout from './wavsynth-layout'\r\nimport sampleLayout from './sample-layout'\r\nimport midioutLayout from './midiout-layout'\r\nimport tableLayout from './table-layout'\r\nimport envelopeLayout from './envelope-layout'\r\nimport glyphs from './glyphs'\r\nimport m8Logo from './m8-logo'\r\nimport {\r\n  backgroundColor, highlightColor, foregroundColor2\r\n} from './colors'\r\n\r\nconst layouts = {\r\n  'MACROSYN': macrosynthLayout,\r\n  'WAVSYNTH': wavsynthLayout,\r\n  'SAMPLE': sampleLayout,\r\n  'MIDI OUT': midioutLayout\r\n}\r\n\r\nconst columns = 40\r\nconst rows = 24\r\n\r\nconst chars = []\r\n\r\nfunction clear () {\r\n  for (let x = 0; x < columns; x += 1) {\r\n    chars[x] = new Array(rows)\r\n    chars[x].fill({\r\n      data: '',\r\n      color: '#000',\r\n      type: 'string'\r\n    })\r\n  }\r\n}\r\n\r\nfunction write (data = [], x = 0, y = 0, color = '#000', type = 'string') {\r\n  if (data.length && type !== 'glyph') {\r\n    const dataLength = Math.min(data.length, columns)\r\n\r\n    for (let i = 0; i < dataLength; i += 1) {\r\n      chars[x + i][y] = { data: data[i], color, type }\r\n    }\r\n  } else if ((typeof data === 'string' && data) || typeof data === 'number') {\r\n    chars[x][y] = { data: data, color, type }\r\n  }\r\n}\r\n\r\n// The only way to prevent subpixel rendering for text on Canvas on Windows seems to be\r\n// rendering the Canvas at an absurd resolution and scaling that down to another Canvas with\r\n// a .5 offset for all co-ordinates, imageSmoothingEnabled set to false, alpha turned off and\r\n// css imageRendering set to 'pixelated' so it shows crisp to the user in the DOM.\r\n\r\nconst renderCanvas = document.createElement('canvas')\r\nconst screenWidth = 320\r\nconst screenHeight = 240\r\nconst numberOfScreensX = 2\r\nconst numberOfScreensY = 2\r\n\r\nexport default function screenWriter (canvas, data) {\r\n  const dpr = 5\r\n  const fontSize = 8 * dpr\r\n  const width = screenWidth * numberOfScreensX\r\n  const height = screenHeight * numberOfScreensY\r\n  const cellWidth = 8 * dpr\r\n  const cellHeight = 10 * dpr\r\n  const verticalHeight = screenHeight * dpr\r\n  const horizontalWidth = screenWidth * dpr\r\n\r\n  let screenX = 0\r\n  let screenY = 0\r\n\r\n  const context = canvas.getContext('2d', { alpha: false })\r\n  const renderContext = renderCanvas.getContext('2d', { alpha: false })\r\n\r\n  canvas.width = width\r\n  canvas.height = height\r\n  canvas.style.width = `${width}px`\r\n  canvas.style.height = `${height}px`\r\n  canvas.style.imageRendering = 'pixelated'\r\n  context.imageSmoothingEnabled = false\r\n\r\n  renderCanvas.width = width * dpr\r\n  renderCanvas.height = height * dpr\r\n  renderContext.imageSmoothingEnabled = false\r\n\r\n  renderContext.fillStyle = backgroundColor\r\n  renderContext.fillRect(0, 0, renderCanvas.width, renderCanvas.height)\r\n  renderContext.font = `${fontSize}px stealth57`\r\n  renderContext.textBaseline = 'top'\r\n\r\n  const renderScreen = () => {\r\n    for (let x = 0; x < chars.length; x += 1) {\r\n      for (let y = 0; y < chars[x].length; y += 1) {\r\n        const { data, color, type } = chars[x][y]\r\n\r\n        let xp = (screenX * horizontalWidth) + (x * cellWidth) + 0.5\r\n        let yp = (screenY * verticalHeight) + (y * cellHeight) + 0.5\r\n\r\n        if (type === 'string') {\r\n          if (!data || data === ' ') {\r\n            continue\r\n          }\r\n          renderContext.fillStyle = color\r\n          renderContext.fillText(data, xp, yp)\r\n        } else if (type === 'glyph') {\r\n          renderContext.fillStyle = color\r\n\r\n          renderContext.save()\r\n          renderContext.translate(\r\n            xp, yp\r\n          )\r\n          renderContext.fill(glyphs[data])\r\n          renderContext.restore()\r\n        } else if (type === 'bar') {\r\n          renderContext.fillStyle = color\r\n\r\n          // Write a 1px line when near 0\r\n          const barWidth = Math.max(0.01 * (fontSize * 7), (data / 256) * (fontSize * 7))\r\n\r\n          renderContext.fillRect(\r\n            xp,\r\n            yp,\r\n            barWidth,\r\n            4 * dpr\r\n          )\r\n        } else if (type === 'bar-centered') {\r\n          const value = data / 256\r\n          const barWidth = (fontSize * 7)\r\n          const barCenter = barWidth / 2\r\n\r\n          renderContext.fillStyle = color\r\n          renderContext.fillRect(\r\n            xp + barCenter - value,\r\n            yp,\r\n            // Write a 1px line when near 0\r\n            (value > 0.5 ? Math.max(0.01, -(0.5 - value)) : Math.min(-0.01, (value - 0.5))) * barWidth,\r\n            4 * dpr\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n    context.drawImage(renderCanvas, 0, 0, width, height)\r\n  }\r\n\r\n  screenX = 1\r\n  screenY = 0\r\n  renderContext.save()\r\n  renderContext.translate(\r\n    (screenX * horizontalWidth) + 0.5,\r\n    (screenY * verticalHeight) + 0.5\r\n  )\r\n\r\n  renderContext.fillStyle = highlightColor\r\n  renderContext.fill(m8Logo)\r\n  renderContext.restore()\r\n\r\n  clear()\r\n  screenX = 0\r\n  screenY = 1\r\n  writeLayout(commonInstrumentLayout, data)\r\n  // map\r\n  writeLayout([\r\n    { data: '   E ', x: 34, y: 17, color: foregroundColor2 },\r\n    { data: 'SCP T', x: 34, y: 18, color: foregroundColor2 },\r\n    { data: 'I', x: 37, y: 18, color: highlightColor },\r\n    { data: '   M ', x: 34, y: 19, color: foregroundColor2 },\r\n    data\r\n  ])\r\n\r\n  const layout = layouts[data['Instrument Type'].label]\r\n\r\n  if (layout) {\r\n    writeLayout(commonScreenLayout, data)\r\n    writeLayout(commonInstrumentLayout, data)\r\n    writeLayout(layout, data)\r\n  }\r\n\r\n  renderScreen()\r\n\r\n  clear()\r\n  screenX = 1\r\n  screenY = 1\r\n  writeLayout(commonScreenLayout, data)\r\n  writeLayout(tableLayout, data)\r\n  renderScreen()\r\n\r\n  clear()\r\n  screenX = 0\r\n  screenY = 0\r\n  if (layout) {\r\n    writeLayout(commonScreenLayout, data)\r\n    writeLayout(commonInstrumentLayout, data)\r\n    writeLayout(envelopeLayout, data)\r\n  } else {\r\n    write('DRAG AND DROP AN .M8I FILE', 1, 3, highlightColor)\r\n    write('RIGHT CLICK TO SAVE IMAGE', 1, 5, highlightColor)\r\n  }\r\n  renderScreen()\r\n}\r\n\r\nfunction writeLayout (layout, data) {\r\n  layout.forEach(({ data: layoutData, x, y, color, type }) => {\r\n    if (typeof layoutData === 'function') {\r\n      write(layoutData(data), x, y, color, type)\r\n    } else {\r\n      write(layoutData, x, y, color, type)\r\n    }\r\n  })\r\n}\r\n","import '../assets/css/styles.css'\r\nimport parser from './parser'\r\nimport screenWriter from './screen-writer'\r\nconst fontPath = require('../assets/fonts/stealth57-webfont.woff')\r\n\r\n// if (module.hot) {\r\n//   module.hot.dispose(cleanUp);\r\n// }\r\n\r\nconst none = [77, 56, 86, 69, 82, 83, 73, 79, 78, 0, 1, 1, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0, 0, 255, 255, 0, 255, 0, 255, 0]\r\n\r\nconst dropArea = document.getElementById('app')\r\nconst canvas = document.getElementById('canvas')\r\n\r\ndropArea.addEventListener('dragover', e => {\r\n  e.preventDefault()\r\n})\r\n\r\ndropArea.addEventListener('drop', e => {\r\n  e.preventDefault()\r\n\r\n  const file = event.dataTransfer.files[0]\r\n\r\n  const reader = new FileReader()\r\n\r\n  reader.onload = () => {\r\n    const arrayBuffer = reader.result\r\n\r\n    const byteArray = [...new Uint8Array(arrayBuffer)]\r\n    console.log(byteArray)\r\n\r\n    const parsed = parser(byteArray)\r\n    console.log(parsed)\r\n\r\n    screenWriter(canvas, parsed)\r\n  }\r\n\r\n  reader.readAsArrayBuffer(file)\r\n})\r\n\r\nconst stealth57 = new FontFace('stealth57', `url(\"${fontPath}\")`)\r\n\r\nstealth57.load().then((font) => {\r\n  document.fonts.add(font)\r\n\r\n  screenWriter(canvas, parser(none))\r\n})\r\n"]}